<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Midday\Midday\Models\Operations;


/** GetCustomerByIdResponseBody - Retrieve a customer by ID for the authenticated team. */
class GetCustomerByIdResponseBody
{
    /**
     * Unique identifier of the customer
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Name of the customer or organization
     *
     * @var string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public string $name;

    /**
     * Primary email address of the customer
     *
     * @var string $email
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('email')]
    public string $email;

    /**
     * Date and time when the customer was created in ISO 8601 format
     *
     * @var string $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdAt')]
    public string $createdAt;

    /**
     * Unique token for the customer (used for internal identification)
     *
     * @var string $token
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('token')]
    public string $token;

    /**
     * Total number of invoices created for this customer
     *
     * @var float $invoiceCount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('invoiceCount')]
    public float $invoiceCount;

    /**
     * Total number of projects associated with this customer
     *
     * @var float $projectCount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('projectCount')]
    public float $projectCount;

    /**
     * Array of tags associated with the customer for categorization
     *
     * @var array<GetCustomerByIdTag> $tags
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tags')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Midday\Midday\Models\Operations\GetCustomerByIdTag>')]
    public array $tags;

    /**
     * Primary phone number of the customer
     *
     * @var ?string $phone
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('phone')]
    public ?string $phone;

    /**
     * Website URL of the customer
     *
     * @var ?string $website
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('website')]
    public ?string $website;

    /**
     * Country name where the customer is located
     *
     * @var ?string $country
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('country')]
    public ?string $country;

    /**
     * First line of the customer's address
     *
     * @var ?string $addressLine1
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('addressLine1')]
    public ?string $addressLine1;

    /**
     * Second line of the customer's address (suite, apartment, etc.)
     *
     * @var ?string $addressLine2
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('addressLine2')]
    public ?string $addressLine2;

    /**
     * City where the customer is located
     *
     * @var ?string $city
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('city')]
    public ?string $city;

    /**
     * State or province where the customer is located
     *
     * @var ?string $state
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('state')]
    public ?string $state;

    /**
     * ZIP or postal code of the customer's address
     *
     * @var ?string $zip
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('zip')]
    public ?string $zip;

    /**
     * Internal notes about the customer for team reference
     *
     * @var ?string $note
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('note')]
    public ?string $note;

    /**
     * VAT (Value Added Tax) number of the customer
     *
     * @var ?string $vatNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('vatNumber')]
    public ?string $vatNumber;

    /**
     * Country code in ISO 3166-1 alpha-2 format
     *
     * @var ?string $countryCode
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('countryCode')]
    public ?string $countryCode;

    /**
     * Primary contact person's name at the customer organization
     *
     * @var ?string $contact
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('contact')]
    public ?string $contact;

    /**
     * @param  string  $id
     * @param  string  $name
     * @param  string  $email
     * @param  string  $createdAt
     * @param  string  $token
     * @param  float  $invoiceCount
     * @param  float  $projectCount
     * @param  array<GetCustomerByIdTag>  $tags
     * @param  ?string  $phone
     * @param  ?string  $website
     * @param  ?string  $country
     * @param  ?string  $addressLine1
     * @param  ?string  $addressLine2
     * @param  ?string  $city
     * @param  ?string  $state
     * @param  ?string  $zip
     * @param  ?string  $note
     * @param  ?string  $vatNumber
     * @param  ?string  $countryCode
     * @param  ?string  $contact
     * @phpstan-pure
     */
    public function __construct(string $id, string $name, string $email, string $createdAt, string $token, float $invoiceCount, float $projectCount, array $tags, ?string $phone = null, ?string $website = null, ?string $country = null, ?string $addressLine1 = null, ?string $addressLine2 = null, ?string $city = null, ?string $state = null, ?string $zip = null, ?string $note = null, ?string $vatNumber = null, ?string $countryCode = null, ?string $contact = null)
    {
        $this->id = $id;
        $this->name = $name;
        $this->email = $email;
        $this->createdAt = $createdAt;
        $this->token = $token;
        $this->invoiceCount = $invoiceCount;
        $this->projectCount = $projectCount;
        $this->tags = $tags;
        $this->phone = $phone;
        $this->website = $website;
        $this->country = $country;
        $this->addressLine1 = $addressLine1;
        $this->addressLine2 = $addressLine2;
        $this->city = $city;
        $this->state = $state;
        $this->zip = $zip;
        $this->note = $note;
        $this->vatNumber = $vatNumber;
        $this->countryCode = $countryCode;
        $this->contact = $contact;
    }
}