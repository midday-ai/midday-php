<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Midday\Midday\Models\Operations;


class StartTimerRequest
{
    /**
     * Unique identifier of the project to track time for
     *
     * @var string $projectId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('projectId')]
    public string $projectId;

    /**
     * Start time in ISO 8601 format. If not provided, will use current time
     *
     * @var ?\DateTime $start
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('start')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $start = null;

    /**
     * Continue from a specific paused entry ID
     *
     * @var ?string $continueFromEntry
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('continueFromEntry')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $continueFromEntry = null;

    /**
     * Unique identifier of the user to assign the timer to. If not provided, will use the authenticated user
     *
     * @var ?string $assignedId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('assignedId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $assignedId = null;

    /**
     * Optional description for the timer session
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * @param  string  $projectId
     * @param  ?\DateTime  $start
     * @param  ?string  $continueFromEntry
     * @param  ?string  $assignedId
     * @param  ?string  $description
     * @phpstan-pure
     */
    public function __construct(string $projectId, ?\DateTime $start = null, ?string $continueFromEntry = null, ?string $assignedId = null, ?string $description = null)
    {
        $this->projectId = $projectId;
        $this->start = $start;
        $this->continueFromEntry = $continueFromEntry;
        $this->assignedId = $assignedId;
        $this->description = $description;
    }
}