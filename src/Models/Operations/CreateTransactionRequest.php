<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Midday\Midday\Models\Operations;


class CreateTransactionRequest
{
    /**
     * Name of the transaction.
     *
     * @var string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    public string $name;

    /**
     * Amount of the transaction.
     *
     * @var float $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    public float $amount;

    /**
     * Currency of the transaction.
     *
     * @var string $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    public string $currency;

    /**
     * Date of the transaction (ISO 8601).
     *
     * @var string $date
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('date')]
    public string $date;

    /**
     * Bank account ID associated with the transaction.
     *
     * @var string $bankAccountId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('bankAccountId')]
    public string $bankAccountId;

    /**
     * Assigned user ID for the transaction.
     *
     * @var ?string $assignedId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('assignedId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $assignedId = null;

    /**
     * Category slug for the transaction.
     *
     * @var ?string $categorySlug
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('categorySlug')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $categorySlug = null;

    /**
     * Note for the transaction.
     *
     * @var ?string $note
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('note')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $note = null;

    /**
     * Whether the transaction is internal.
     *
     * @var ?bool $internal
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('internal')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $internal = null;

    /**
     * Array of attachments for the transaction.
     *
     * @var ?array<CreateTransactionAttachment> $attachments
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('attachments')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\Midday\Midday\Models\Operations\CreateTransactionAttachment>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $attachments = null;

    /**
     * @param  string  $name
     * @param  float  $amount
     * @param  string  $currency
     * @param  string  $date
     * @param  string  $bankAccountId
     * @param  ?string  $assignedId
     * @param  ?string  $categorySlug
     * @param  ?string  $note
     * @param  ?bool  $internal
     * @param  ?array<CreateTransactionAttachment>  $attachments
     * @phpstan-pure
     */
    public function __construct(string $name, float $amount, string $currency, string $date, string $bankAccountId, ?string $assignedId = null, ?string $categorySlug = null, ?string $note = null, ?bool $internal = null, ?array $attachments = null)
    {
        $this->name = $name;
        $this->amount = $amount;
        $this->currency = $currency;
        $this->date = $date;
        $this->bankAccountId = $bankAccountId;
        $this->assignedId = $assignedId;
        $this->categorySlug = $categorySlug;
        $this->note = $note;
        $this->internal = $internal;
        $this->attachments = $attachments;
    }
}