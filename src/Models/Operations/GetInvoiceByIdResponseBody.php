<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Midday\Midday\Models\Operations;


/** GetInvoiceByIdResponseBody - Invoice object */
class GetInvoiceByIdResponseBody
{
    /**
     * Unique identifier for the invoice
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('id')]
    public string $id;

    /**
     * Current status of the invoice
     *
     * @var GetInvoiceByIdStatus $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\Midday\Midday\Models\Operations\GetInvoiceByIdStatus')]
    public GetInvoiceByIdStatus $status;

    /**
     * Due date of the invoice in ISO 8601 format
     *
     * @var string $dueDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('dueDate')]
    public string $dueDate;

    /**
     * Issue date of the invoice in ISO 8601 format
     *
     * @var string $issueDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('issueDate')]
    public string $issueDate;

    /**
     * Invoice number as shown to the customer
     *
     * @var string $invoiceNumber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('invoiceNumber')]
    public string $invoiceNumber;

    /**
     * Total amount of the invoice
     *
     * @var float $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    public float $amount;

    /**
     * Currency code (ISO 4217) for the invoice amount
     *
     * @var string $currency
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('currency')]
    public string $currency;

    /**
     * Customer details
     *
     * @var GetInvoiceByIdCustomer $customer
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customer')]
    #[\Speakeasy\Serializer\Annotation\Type('\Midday\Midday\Models\Operations\GetInvoiceByIdCustomer')]
    public GetInvoiceByIdCustomer $customer;

    /**
     * Timestamp when the invoice was created (ISO 8601)
     *
     * @var string $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdAt')]
    public string $createdAt;

    /**
     * Timestamp when the invoice was last updated (ISO 8601)
     *
     * @var string $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updatedAt')]
    public string $updatedAt;

    /**
     * Timestamp when the invoice was paid (ISO 8601), or null if unpaid
     *
     * @var ?string $paidAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('paidAt')]
    public ?string $paidAt;

    /**
     * Timestamp when a payment reminder was sent (ISO 8601), or null if never sent
     *
     * @var ?string $reminderSentAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('reminderSentAt')]
    public ?string $reminderSentAt;

    /**
     * Optional note attached to the invoice
     *
     * @var ?string $note
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('note')]
    public ?string $note;

    /**
     * Value-added tax amount, or null if not applicable
     *
     * @var ?float $vat
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('vat')]
    public ?float $vat;

    /**
     * Tax amount, or null if not applicable
     *
     * @var ?float $tax
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('tax')]
    public ?float $tax;

    /**
     * Discount amount applied to the invoice, or null if none
     *
     * @var ?float $discount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('discount')]
    public ?float $discount;

    /**
     * Subtotal before taxes and discounts, or null if not calculated
     *
     * @var ?float $subtotal
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subtotal')]
    public ?float $subtotal;

    /**
     * Timestamp when the invoice was viewed by the customer (ISO 8601), or null if never viewed
     *
     * @var ?string $viewedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('viewedAt')]
    public ?string $viewedAt;

    /**
     * Name of the customer as shown on the invoice, or null if not set
     *
     * @var ?string $customerName
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('customerName')]
    public ?string $customerName;

    /**
     * Email address to which the invoice was sent, or null if not sent
     *
     * @var ?string $sentTo
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('sentTo')]
    public ?string $sentTo;

    /**
     * Timestamp when the invoice was sent (ISO 8601), or null if not sent
     *
     * @var ?string $sentAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('sentAt')]
    public ?string $sentAt;

    /**
     * @param  string  $id
     * @param  GetInvoiceByIdStatus  $status
     * @param  string  $dueDate
     * @param  string  $issueDate
     * @param  string  $invoiceNumber
     * @param  float  $amount
     * @param  string  $currency
     * @param  GetInvoiceByIdCustomer  $customer
     * @param  string  $createdAt
     * @param  string  $updatedAt
     * @param  ?string  $paidAt
     * @param  ?string  $reminderSentAt
     * @param  ?string  $note
     * @param  ?float  $vat
     * @param  ?float  $tax
     * @param  ?float  $discount
     * @param  ?float  $subtotal
     * @param  ?string  $viewedAt
     * @param  ?string  $customerName
     * @param  ?string  $sentTo
     * @param  ?string  $sentAt
     * @phpstan-pure
     */
    public function __construct(string $id, GetInvoiceByIdStatus $status, string $dueDate, string $issueDate, string $invoiceNumber, float $amount, string $currency, GetInvoiceByIdCustomer $customer, string $createdAt, string $updatedAt, ?string $paidAt = null, ?string $reminderSentAt = null, ?string $note = null, ?float $vat = null, ?float $tax = null, ?float $discount = null, ?float $subtotal = null, ?string $viewedAt = null, ?string $customerName = null, ?string $sentTo = null, ?string $sentAt = null)
    {
        $this->id = $id;
        $this->status = $status;
        $this->dueDate = $dueDate;
        $this->issueDate = $issueDate;
        $this->invoiceNumber = $invoiceNumber;
        $this->amount = $amount;
        $this->currency = $currency;
        $this->customer = $customer;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->paidAt = $paidAt;
        $this->reminderSentAt = $reminderSentAt;
        $this->note = $note;
        $this->vat = $vat;
        $this->tax = $tax;
        $this->discount = $discount;
        $this->subtotal = $subtotal;
        $this->viewedAt = $viewedAt;
        $this->customerName = $customerName;
        $this->sentTo = $sentTo;
        $this->sentAt = $sentAt;
    }
}