<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Midday\Midday\Models\Operations;


class StopTimerRequest
{
    /**
     * Unique identifier of the specific timer entry to stop. If not provided, will stop the current running timer for the user
     *
     * @var ?string $entryId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('entryId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $entryId = null;

    /**
     * Stop time in ISO 8601 format. If not provided, will use current time
     *
     * @var ?\DateTime $stop
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('stop')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?\DateTime $stop = null;

    /**
     * Unique identifier of the user whose timer should be stopped. If not provided, will use the authenticated user
     *
     * @var ?string $assignedId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('assignedId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $assignedId = null;

    /**
     * @param  ?string  $entryId
     * @param  ?\DateTime  $stop
     * @param  ?string  $assignedId
     * @phpstan-pure
     */
    public function __construct(?string $entryId = null, ?\DateTime $stop = null, ?string $assignedId = null)
    {
        $this->entryId = $entryId;
        $this->stop = $stop;
        $this->assignedId = $assignedId;
    }
}