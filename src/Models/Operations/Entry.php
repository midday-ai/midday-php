<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace Midday\Midday\Models\Operations;


class Entry
{
    /**
     * Start time of the tracker entry in ISO 8601 format
     *
     * @var \DateTime $start
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('start')]
    public \DateTime $start;

    /**
     * Stop time of the tracker entry in ISO 8601 format
     *
     * @var \DateTime $stop
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('stop')]
    public \DateTime $stop;

    /**
     * Array of dates for which to create tracker entries
     *
     * @var array<string> $dates
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('dates')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>')]
    public array $dates;

    /**
     * Unique identifier of the project associated with this tracker entry
     *
     * @var string $projectId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('projectId')]
    public string $projectId;

    /**
     * Duration of the tracker entry in seconds
     *
     * @var float $duration
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('duration')]
    public float $duration;

    /**
     * Unique identifier of the user assigned to this tracker entry
     *
     * @var ?string $assignedId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('assignedId')]
    public ?string $assignedId;

    /**
     * Optional description or notes for the tracker entry
     *
     * @var ?string $description
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('description')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $description = null;

    /**
     * @param  \DateTime  $start
     * @param  \DateTime  $stop
     * @param  array<string>  $dates
     * @param  string  $projectId
     * @param  float  $duration
     * @param  ?string  $assignedId
     * @param  ?string  $description
     * @phpstan-pure
     */
    public function __construct(\DateTime $start, \DateTime $stop, array $dates, string $projectId, float $duration, ?string $assignedId = null, ?string $description = null)
    {
        $this->start = $start;
        $this->stop = $stop;
        $this->dates = $dates;
        $this->projectId = $projectId;
        $this->duration = $duration;
        $this->assignedId = $assignedId;
        $this->description = $description;
    }
}